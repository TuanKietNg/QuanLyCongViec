{"remainingRequest":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\src\\pages\\trangThai\\index.vue?vue&type=template&id=d3a0e7f2&","dependencies":[{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\src\\pages\\trangThai\\index.vue","mtime":1704440180000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704332086000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704332086000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\babel-loader\\lib\\index.js","mtime":1704440412000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1704440418000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704332086000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\vue-loader\\lib\\index.js","mtime":1704440418000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}