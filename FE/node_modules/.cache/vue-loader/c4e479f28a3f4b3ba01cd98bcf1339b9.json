{"remainingRequest":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\src\\components\\side-nav.vue?vue&type=style&index=0&id=39fea53d&scoped=true&lang=css&","dependencies":[{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\src\\components\\side-nav.vue","mtime":1704440180000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\css-loader\\dist\\cjs.js","mtime":1704332100000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1704440418000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\postcss-loader\\src\\index.js","mtime":1704332100000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704332086000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\vue-loader\\lib\\index.js","mtime":1704440418000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubW0tYWN0aXZlID4gYSB7DQogIGNvbG9yOiAjMDgyOTU3ICFpbXBvcnRhbnQ7DQp9DQojc2lkZWJhci1tZW51IHVsIGxpIGE6aG92ZXIgew0KICBjb2xvcjogIzA4Mjk1NzsNCn0NCi5tbS1hY3RpdmUgPiBhIGkgew0KICBjb2xvcjogIzA4Mjk1NyAhaW1wb3J0YW50Ow0KfQ0KI3NpZGViYXItbWVudSA+IHVsID4gbGkgPiBhOmhvdmVyIGkgew0KICBjb2xvcjogIzA4Mjk1NzsNCn0NCiNzaWRlYmFyLW1lbnUgdWwgbGkgYTpob3ZlciBpIHsNCiAgY29sb3I6ICMwODI5NTc7DQp9DQo="},{"version":3,"sources":["side-nav.vue"],"names":[],"mappings":";AAwQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"side-nav.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\nimport MetisMenu from \"metismenujs/dist/metismenujs\";\r\n\r\nimport Vue from \"vue\";\r\nimport {mapState} from \"vuex\";\r\n\r\n/**\r\n * Sidenav component\r\n */\r\nexport default {\r\n  data() {\r\n    return {\r\n      menuData: null,\r\n      checkMounted: true,\r\n      menu : []\r\n    };\r\n  },\r\n  created() {\r\n   // console.log(\"LOG ON CREATED : SIDE - NAV \")\r\n    var currentUser = localStorage.getItem(\"auth-user\");\r\n    if (currentUser) {\r\n      let data = JSON.parse(currentUser)\r\n      if (data && data.user.menu)\r\n        this.menuItems = data.user.menu;\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState('snackBarStore', ['isMenuAction'])\r\n  },\r\n  watch: {\r\n    isMenuAction: {\r\n      deep: true,\r\n      handler(val) {\r\n        var currentMenu = localStorage.getItem(\"currentMenuId\")\r\n\r\n        var menuRef = new MetisMenu(\"#side-menu\");\r\n        var links = document.getElementsByClassName(\"side-nav-link-ref active\");\r\n        var chil = links[0]\r\n        if (chil) {\r\n          chil.classList.remove(\"active\")\r\n          var parent = chil.parentElement;\r\n          if (parent)\r\n            parent.classList.remove(\"mm-active\");\r\n        }\r\n        this.handleMenuActive()\r\n      }\r\n    },\r\n  },\r\n  mounted: function () {\r\n    var currentMenu = localStorage.getItem(\"currentMenuId\")\r\n\r\n    var menuRef = new MetisMenu(\"#side-menu\");\r\n    var links = document.getElementsByClassName(\"side-nav-link-ref\");\r\n\r\n    var matchingMenuItem = null;\r\n    const paths = [];\r\n    for (var i = 0; i < links.length; i++) {\r\n      paths.push({link: links[i].getAttribute(\"pathname\"), menuId: links[i].getAttribute(\"menuId\")});\r\n    }\r\n    var itemIndex = paths.findIndex(x => x.link = window.location.pathname && x.menuId == currentMenu);\r\n    if (itemIndex === -1) {\r\n      const strIndex = window.location.pathname.lastIndexOf(\"/\");\r\n      const item = window.location.pathname.substr(0, strIndex).toString();\r\n      matchingMenuItem = links[paths.findIndex(x => x.link == item)];\r\n    } else {\r\n      matchingMenuItem = links[itemIndex];\r\n    }\r\n    if (matchingMenuItem) {\r\n      matchingMenuItem.classList.add(\"active\");\r\n      var parent = matchingMenuItem.parentElement;\r\n\r\n      /**\r\n       * TODO: This is hard coded way of expading/activating parent menu dropdown and working till level 3.\r\n       * We should come up with non hard coded approach\r\n       */\r\n      if (parent) {\r\n        parent.classList.add(\"mm-active\");\r\n        const parent2 = parent.parentElement.closest(\"ul\");\r\n        if (parent2 && parent2.id !== \"side-menu\") {\r\n          parent2.classList.add(\"mm-show\");\r\n\r\n          const parent3 = parent2.parentElement;\r\n          if (parent3) {\r\n            parent3.classList.add(\"mm-active\");\r\n            var childAnchor = parent3.querySelector(\".has-arrow\");\r\n            var childDropdown = parent3.querySelector(\".has-dropdown\");\r\n            if (childAnchor) childAnchor.classList.add(\"mm-active\");\r\n            if (childDropdown) childDropdown.classList.add(\"mm-active\");\r\n\r\n            const parent4 = parent3.parentElement;\r\n            if (parent4 && parent4.id !== \"side-menu\") {\r\n              parent4.classList.add(\"mm-show\");\r\n              const parent5 = parent4.parentElement;\r\n              if (parent5 && parent5.id !== \"side-menu\") {\r\n                parent5.classList.add(\"mm-active\");\r\n                const childanchor = parent5.querySelector(\".is-parent\");\r\n                if (childanchor && parent5.id !== \"side-menu\") {\r\n                  childanchor.classList.add(\"mm-active\");\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    toggleCollapse(item) {\r\n      item.collapsed = !item.collapsed;\r\n    },\r\n    handleMenuActive() {\r\n      var currentMenu = localStorage.getItem(\"currentMenuId\")\r\n\r\n      var menuRef = new MetisMenu(\"#side-menu\");\r\n      var links = document.getElementsByClassName(\"side-nav-link-ref\");\r\n\r\n      var matchingMenuItem = null;\r\n      const paths = [];\r\n      for (var i = 0; i < links.length; i++) {\r\n        paths.push({link: links[i].getAttribute(\"pathname\"), menuId: links[i].getAttribute(\"menuId\")});\r\n      }\r\n      var itemIndex = paths.findIndex(x => x.link = window.location.pathname && x.menuId == currentMenu);\r\n      if (itemIndex === -1) {\r\n        const strIndex = window.location.pathname.lastIndexOf(\"/\");\r\n        const item = window.location.pathname.substr(0, strIndex).toString();\r\n        matchingMenuItem = links[paths.findIndex(x => x.link == item)];\r\n      } else {\r\n        matchingMenuItem = links[itemIndex];\r\n      }\r\n\r\n      if (matchingMenuItem) {\r\n        matchingMenuItem.classList.add(\"active\");\r\n        var parent = matchingMenuItem.parentElement;\r\n\r\n        /**\r\n         * TODO: This is hard coded way of expading/activating parent menu dropdown and working till level 3.\r\n         * We should come up with non hard coded approach\r\n         */\r\n        if (parent) {\r\n          parent.classList.add(\"mm-active\");\r\n          const parent2 = parent.parentElement.closest(\"ul\");\r\n          if (parent2 && parent2.id !== \"side-menu\") {\r\n            parent2.classList.add(\"mm-show\");\r\n\r\n            const parent3 = parent2.parentElement;\r\n            if (parent3) {\r\n              parent3.classList.add(\"mm-active\");\r\n              var childAnchor = parent3.querySelector(\".has-arrow\");\r\n              var childDropdown = parent3.querySelector(\".has-dropdown\");\r\n              if (childAnchor) childAnchor.classList.add(\"mm-active\");\r\n              if (childDropdown) childDropdown.classList.add(\"mm-active\");\r\n\r\n              const parent4 = parent3.parentElement;\r\n              if (parent4 && parent4.id !== \"side-menu\") {\r\n                parent4.classList.add(\"mm-show\");\r\n                const parent5 = parent4.parentElement;\r\n                if (parent5 && parent5.id !== \"side-menu\") {\r\n                  parent5.classList.add(\"mm-active\");\r\n                  const childanchor = parent5.querySelector(\".is-parent\");\r\n                  if (childanchor && parent5.id !== \"side-menu\") {\r\n                    childanchor.classList.add(\"mm-active\");\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * Returns true or false if given menu item has child or not\r\n     * @param item menuItem\r\n     */\r\n    hasItems(item) {\r\n      return item.subItems !== undefined ? item.subItems?.length > 0 : false;\r\n    },\r\n    toggleMenu(event) {\r\n      event.currentTarget.nextElementSibling.classList.toggle(\"mm-show\");\r\n    },\r\n    handleGetIdMenu(path, id) {\r\n      Vue.prototype.menuId = id;\r\n      localStorage.setItem(\"currentMenuId\", id);\r\n      if (path != window.location.pathname)\r\n        this.$router.push(path);\r\n      this.$store.dispatch(\"snackBarStore/clickMenu\", !this.$store.state.snackBarStore.isMenuAction)\r\n    },\r\n    getCount(id) {\r\n      var resultData = this.menu.filter(x => {\r\n        return x.id == id;\r\n      })\r\n    //  console.log(\"LOG ID GET COUNT : \", id , resultData)\r\n      if (resultData.length > 0)\r\n      {\r\n        return resultData[0].soLuong;\r\n      }\r\n      return 0 ;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <!-- ========== Left Sidebar Start ========== -->\r\n\r\n  <!--- Sidemenu -->\r\n<!--  <div id=\"sidebar-menu\">-->\r\n<!--    &lt;!&ndash; Left Menu Start &ndash;&gt;-->\r\n<!--    <ul id=\"side-menu\" class=\"metismenu list-unstyled\">-->\r\n<!--      <template v-for=\"item in menuItems\">-->\r\n<!--        <li class=\"menu-title\" v-if=\"item.isTitle\" :key=\"item.id\" style=\"color: #5d5858\">-->\r\n<!--          {{ item.label}}-->\r\n<!--        </li>-->\r\n<!--        <template v-if=\"hasItems(item)\">-->\r\n<!--          <li v-for=\"(value) in item.subItems\" :key=\"value.id\">-->\r\n<!--            <a :menuId=\"value.id\" :pathname=\"value.link\" style=\"cursor: pointer\"-->\r\n<!--               @click=\"handleGetIdMenu(value.link, value.id)\" class=\"side-nav-link-ref\">-->\r\n<!--              <i :class=\"`bx ${value.icon}`\" v-if=\"value.icon\"></i>-->\r\n<!--              <span>{{ value.label}}</span>-->\r\n<!--              <span v-if=\"getCount(value.id) > 0\" style=\"font-weight:bold \"> ( {{getCount(value.id)}} )</span>-->\r\n<!--&lt;!&ndash;              <span v-else >NHỎ HƠN 0</span>&ndash;&gt;-->\r\n<!--              <span :class=\"`badge rounded-pill bg-${value.badge.variant} float-end`\"-->\r\n<!--                    v-if=\"value.badge\">{{ value.badge.text }}</span>-->\r\n<!--            </a>-->\r\n<!--          </li>-->\r\n<!--        </template>-->\r\n<!--      </template>-->\r\n<!--    </ul>-->\r\n<!--  </div>-->\r\n  <div id=\"sidebar-menu\">\r\n    <!-- Left Menu Start -->\r\n    <ul id=\"side-menu\" class=\"metismenu list-unstyled\">\r\n      <template v-for=\"item in menuItems\">\r\n<!--        <li class=\"menu-title\" v-if=\"item.isTitle\" :key=\"item.id\" style=\"color: #5d5858\">-->\r\n<!--          {{ item.label }}-->\r\n<!--        </li>-->\r\n        <template v-if=\"hasItems(item)\">\r\n          <li :key=\"item.id\">\r\n            <a :menuId=\"item.id\" style=\"cursor: pointer; text-transform: uppercase\" @click=\"toggleCollapse(item)\">\r\n              <i :class=\"`bx ${item.icon}`\" v-if=\"item.icon\"></i>\r\n              <span>{{ item.label }}</span>\r\n              <i class=\"bx\" :class=\"{'bx-chevron-down': !item.collapsed, 'bx-chevron-up': item.collapsed}\"\r\n                 style=\"float: right;\"></i>\r\n            </a>\r\n            <ul v-show=\"!item.collapsed\" class=\"list-unstyled\">\r\n              <li v-for=\"(value) in item.subItems\" :key=\"value.id\">\r\n                <a :menuId=\"value.id\" :pathname=\"value.link\" style=\"cursor: pointer\"\r\n                   @click=\"handleGetIdMenu(value.link, value.id)\" class=\"side-nav-link-ref\">\r\n                  <i :class=\"`bx ${value.icon}`\" v-if=\"value.icon\"></i>\r\n                  <span>{{ value.label }}</span>\r\n                  <span v-if=\"getCount(value.id) > 0\" style=\"font-weight: bold;\"> ({{ getCount(value.id) }})</span>\r\n                  <!--              <span v-else >NHỎ HƠN 0</span>-->\r\n                  <span :class=\"`badge rounded-pill bg-${value.badge.variant} float-end`\"\r\n                        v-if=\"value.badge\">{{ value.badge.text }}</span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </template>\r\n      </template>\r\n    </ul>\r\n  </div>\r\n  <!-- Sidebar -->\r\n</template>\r\n<style type=\"text/css\" scoped>\r\n.mm-active > a {\r\n  color: #082957 !important;\r\n}\r\n#sidebar-menu ul li a:hover {\r\n  color: #082957;\r\n}\r\n.mm-active > a i {\r\n  color: #082957 !important;\r\n}\r\n#sidebar-menu > ul > li > a:hover i {\r\n  color: #082957;\r\n}\r\n#sidebar-menu ul li a:hover i {\r\n  color: #082957;\r\n}\r\n</style>\r\n\r\n"]}]}