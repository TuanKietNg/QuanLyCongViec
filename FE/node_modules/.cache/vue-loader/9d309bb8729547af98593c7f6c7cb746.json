{"remainingRequest":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\@ll931217\\vue-treeview\\branch.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\@ll931217\\vue-treeview\\branch.vue","mtime":1704440392000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704332086000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\babel-loader\\lib\\index.js","mtime":1704440412000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704332086000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\vue-loader\\lib\\index.js","mtime":1704440418000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IGRyYWdnYWJsZSBmcm9tICd2dWVkcmFnZ2FibGUnCiAgZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0JyYW5jaCcsCiAgICBwcm9wczogewogICAgICB0ZXh0OiB7CiAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIGRlZmF1bHQ6ICgpID0+ICcnCiAgICAgIH0sCiAgICAgIG5vZGVzOiB7CiAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgICAgfSwKICAgICAgdHlwZTogewogICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICBkZWZhdWx0OiAoKSA9PiAnJwogICAgICB9LAogICAgICBsaW5rOiB7CiAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgIGRlZmF1bHQ6ICgpID0+ICh7fSkKICAgICAgfSwKICAgICAgY2xvc2VkOiB7CiAgICAgICAgdHlwZTogU3RyaW5nIHwgT2JqZWN0IHwgQXJyYXkKICAgICAgfSwKICAgICAgb3BlbmVkOiB7CiAgICAgICAgdHlwZTogU3RyaW5nIHwgT2JqZWN0IHwgQXJyYXkKICAgICAgfSwKICAgICAgZGVmYXVsdEljb246IHsKICAgICAgICB0eXBlOiBTdHJpbmcgfCBPYmplY3QgfCBBcnJheQogICAgICB9LAogICAgICBlZGl0YWJsZTogewogICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgZGVmYXVsdDogKCkgPT4gdHJ1ZQogICAgICB9LAogICAgICBleHBhbmRlZDogewogICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgZGVmYXVsdDogKCkgPT4gZmFsc2UKICAgICAgfSwKICAgICAgZHJhZ2dhYmxlOiB7CiAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICBkZWZhdWx0OiAoKSA9PiB0cnVlCiAgICAgIH0sCiAgICAgIHNob3dQYXJlbnRJY29uOiB7CiAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgIGRlZmF1bHQ6ICgpID0+ICh7CiAgICAgICAgICBwYXJlbnRTaG93OiBmYWxzZSwKICAgICAgICAgIGVtcHR5UGFyZW50U2hvdzogZmFsc2UsCiAgICAgICAgfSkKICAgICAgfQogICAgfSwKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgIG9wZW46IGZhbHNlLAogICAgICBjbGlja3M6IDAsCiAgICAgIHRpbWVyOiBudWxsLAogICAgICBuZXdOb2RlOiB7CiAgICAgICAgdGV4dDogJ0dvb2dsZScsCiAgICAgICAgbGluazogewogICAgICAgICAgdHlwZTogJ2xpbmsnLAogICAgICAgICAga2V5OiAnJywKICAgICAgICAgIHZhbHVlOiAnaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbScKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGNyZWF0aW5nOiBmYWxzZSwKICAgICAgZWRpdGluZzogZmFsc2UsCiAgICAgIHVybFJlZ2V4OiBuZXcgUmVnRXhwKC9eKGh0dHBzPzpcL1wvKT8od3d3XC58W2EtelxkXStcLik/W2Etel0rKFwuW2Etel17MiwzfXw6XGR7Miw1fSkoXC5bYS16XXsyLDN9KT8oXC8oW1x3XGRdKyk/KSooKFw/fCYpW1x3XGRdKz1bXHdcZF0rKSovKQogICAgfSksCiAgICB3YXRjaDogewogICAgICBleHBhbmRlZDogewogICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICh2YWwpIHsKICAgICAgICAgIHRoaXMub3BlbiA9IHZhbAogICAgICAgIH0sCiAgICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIGNyZWF0ZU5ld05vZGUgKCkgewogICAgICAgIGlmICh0aGlzLmVkaXRhYmxlKSB7CiAgICAgICAgICB0aGlzLmNsaWNrcysrCiAgICAgICAgICBpZiAodGhpcy5jbGlja3MgPT09IDEpIHsKICAgICAgICAgICAgY29uc3QgYXBwID0gdGhpcwogICAgICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgYXBwLnRvZ2dsZSgpCiAgICAgICAgICAgICAgYXBwLmNsaWNrcyA9IDAKICAgICAgICAgICAgfSwgMjUwKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKQogICAgICAgICAgICB0aGlzLmNsaWNrcyA9IDAKICAgICAgICAgICAgdGhpcy5jcmVhdGluZyA9IHRydWUKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy50b2dnbGUoKQogICAgICAgIH0KICAgICAgfSwKICAgICAgY2FuY2VsICgpIHsKICAgICAgICB0aGlzLmNyZWF0aW5nID0gZmFsc2UKICAgICAgICB0aGlzLmVkaXRpbmcgPSBmYWxzZQogICAgICAgIHRoaXMubmV3Tm9kZSA9IHsKICAgICAgICAgIHRleHQ6ICdHb29nbGUnLAogICAgICAgICAgbGluazogewogICAgICAgICAgICB0eXBlOiAnbGluaycsCiAgICAgICAgICAgIGtleTogJycsCiAgICAgICAgICAgIHZhbHVlOiAnaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbScKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIGVkaXQgKCkgewogICAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlCiAgICAgICAgdGhpcy4kZW1pdCgnbm9kZXMnLCB0aGlzLm5vZGVzKQogICAgICB9LAogICAgICBzYXZlICgpIHsKICAgICAgICBpZiAodGhpcy5uZXdOb2RlLmxpbmsudHlwZSA9PT0gJ2xpbmsnKQogICAgICAgICAgZGVsZXRlIHRoaXMubmV3Tm9kZS5saW5rLmtleQogICAgICAgIHRoaXMubm9kZXMucHVzaCh0aGlzLm5ld05vZGUpCiAgICAgICAgdGhpcy5jcmVhdGluZyA9IGZhbHNlCiAgICAgICAgdGhpcy5uZXdOb2RlID0gewogICAgICAgICAgdGV4dDogJ0dvb2dsZScsCiAgICAgICAgICB0eXBlOiAnbGluaycsCiAgICAgICAgICB2YWx1ZTogJ2h0dHBzOi8vd3d3Lmdvb2dsZS5jb20nCiAgICAgICAgfQogICAgICAgIHRoaXMuJGVtaXQoJ25vZGVzJywgdGhpcy5ub2RlcykKICAgICAgfSwKICAgICAgdG9nZ2xlICgpIHsKICAgICAgICB0aGlzLm9wZW4gPSAhdGhpcy5vcGVuCiAgICAgIH0sCiAgICAgIGNoZWNrTGFzdCAoaSkgewogICAgICAgIHJldHVybiAoaSArIDEpID09PSB0aGlzLm5vZGVzLmxlbmd0aAogICAgICB9CiAgICB9LAogICAgY29tcG9uZW50czogewogICAgICBkcmFnZ2FibGUKICAgIH0KICB9Cg=="},{"version":3,"sources":["branch.vue"],"names":[],"mappings":";AAgfile":"branch.vue","sourceRoot":"node_modules/@ll931217/vue-treeview","sourcesContent":["<template lang=\"pug\">\n  ul\n    li\n      transition(name=\"modal\")\n        .modal-mask(v-show=\"creating\", @click.self=\"cancel\")\n          .modal-container\n            .modal-content\n              h1 Create New Node\n              form(@keyup.enter=\"save\")\n                input(type=\"text\", v-model=\"newNode.text\", placeholder=\"Text: Google\")\n                input(type=\"text\", v-model=\"newNode.link.type\", placeholder=\"Type: link\")\n                template(v-show=\"newNode.link.type === 'router-link'\")\n                  input(type=\"text\", v-model=\"newNode.link.key\", placeholder=\"Key: path or name\")\n                input(type=\"text\", v-model=\"newNode.link.value\", placeholder=\"Value: https://www.google.com\")\n                .btn-group\n                  button(type=\"button\", @click=\"cancel\").cancel Cancel\n                  button(type=\"button\", @click=\"save\").save Save\n      transition(name=\"modal\")\n        .modal-mask(v-show=\"editing\", @click.self=\"cancel\")\n          .modal-container\n            .modal-content\n              h1 Edit Node\n              form(@keyup.enter=\"save\")\n                input(type=\"text\", v-model=\"text\", placeholder=\"Text: Google\")\n                input(type=\"text\", v-model=\"link.type\", placeholder=\"Type: link\")\n                template(v-show=\"link.type === 'router-link'\")\n                  input(type=\"text\", v-model=\"link.key\", placeholder=\"Key: path or name\")\n                input(type=\"text\", v-model=\"link.value\", placeholder=\"Value: https://www.google.com\")\n                .btn-group\n                  button(type=\"button\", @click=\"cancel\").cancel Cancel\n                  button(type=\"button\", @click=\"edit\").save Edit\n      .branch(:class=\"{ link: (nodes.length > 0) }\")\n        template(v-if=\"nodes.length > 0\")\n          template(v-if=\"open\")\n            fa(:icon=\"opened\", @click=\"createNewNode\").minus-square\n          template(v-else)\n            fa(:icon=\"closed\", @click=\"createNewNode\").plus-square\n        \n        template(v-if=\"link && link.value\")\n          router-link(:to=\"{ [link.key]: link.value, query: link.query || {}, params: link.params || {} }\", v-if=\"link.type === 'router-link'\").value\n            fa(:icon=\"defaultIcon\")\n            | {{ text }}\n\n          a(:href=\"link.value\", target=\"_blank\", v-else-if=\"link.type === 'link'\").value\n            fa(:icon=\"defaultIcon\")\n            | {{ text }}\n\n          span(@click=\"editing = true\", v-show=\"editable\").edit Edit\n        template(v-else)\n          span(v-if=\"nodes.length > 0\")\n            fa(:icon=\"defaultIcon\", v-show=\"showParentIcon.parentShow\")\n            | {{ text }}\n\n          span(@click=\"createNewNode\", v-else)\n            fa(:icon=\"defaultIcon\", v-show=\"showParentIcon.emptyParentShow\")\n            | {{ text }}\n\n      draggable(:list=\"nodes\", :group=\"{ name: 'g1' }\", v-if=\"draggable\")\n        branch(\n          v-for=\"(t, i) in nodes\",\n          :nodes.sync=\"t.nodes\",\n          :text=\"t.text\",\n          :type=\"t.type\",\n          :link=\"t.link\",\n          :class=\"{ open: open, first: i === 0 && !checkLast(i), last: checkLast(i) }\",\n          v-if=\"nodes\",\n          :closed=\"closed\",\n          :opened=\"opened\",\n          :defaultIcon=\"t.icon || defaultIcon\",\n          :editable=\"editable\",\n          :expanded.sync=\"expanded\",\n          :draggable.sync=\"draggable\",\n          :show-parent-icon=\"showParentIcon\"\n          :key=\"i\"\n        ).node\n      template(v-else)\n        branch(\n          v-for=\"(t, i) in nodes\",\n          :nodes.sync=\"t.nodes\",\n          :text=\"t.text\",\n          :type=\"t.type\",\n          :link=\"t.link\",\n          :class=\"{ open: open, first: i === 0 && !checkLast(i), last: checkLast(i) }\",\n          v-if=\"nodes\",\n          :closed=\"closed\",\n          :opened=\"opened\",\n          :defaultIcon=\"t.icon || defaultIcon\",\n          :editable=\"editable\",\n          :expanded.sync=\"expanded\",\n          :draggable.sync=\"draggable\",\n          :show-parent-icon=\"showParentIcon\"\n          :key=\"i\"\n        ).node\n</template>\n\n<script>\n  import draggable from 'vuedraggable'\n  export default {\n    name: 'Branch',\n    props: {\n      text: {\n        type: String,\n        required: true,\n        default: () => ''\n      },\n      nodes: {\n        type: Array,\n        default: () => []\n      },\n      type: {\n        type: String,\n        default: () => ''\n      },\n      link: {\n        type: Object,\n        default: () => ({})\n      },\n      closed: {\n        type: String | Object | Array\n      },\n      opened: {\n        type: String | Object | Array\n      },\n      defaultIcon: {\n        type: String | Object | Array\n      },\n      editable: {\n        type: Boolean,\n        default: () => true\n      },\n      expanded: {\n        type: Boolean,\n        default: () => false\n      },\n      draggable: {\n        type: Boolean,\n        default: () => true\n      },\n      showParentIcon: {\n        type: Object,\n        default: () => ({\n          parentShow: false,\n          emptyParentShow: false,\n        })\n      }\n    },\n    data: () => ({\n      open: false,\n      clicks: 0,\n      timer: null,\n      newNode: {\n        text: 'Google',\n        link: {\n          type: 'link',\n          key: '',\n          value: 'https://www.google.com'\n        }\n      },\n      creating: false,\n      editing: false,\n      urlRegex: new RegExp(/^(https?:\\/\\/)?(www\\.|[a-z\\d]+\\.)?[a-z]+(\\.[a-z]{2,3}|:\\d{2,5})(\\.[a-z]{2,3})?(\\/([\\w\\d]+)?)*((\\?|&)[\\w\\d]+=[\\w\\d]+)*/)\n    }),\n    watch: {\n      expanded: {\n        handler: function (val) {\n          this.open = val\n        },\n        immediate: true\n      }\n    },\n    methods: {\n      createNewNode () {\n        if (this.editable) {\n          this.clicks++\n          if (this.clicks === 1) {\n            const app = this\n            this.timer = setTimeout(() => {\n              app.toggle()\n              app.clicks = 0\n            }, 250);\n          } else {\n            clearTimeout(this.timer)\n            this.clicks = 0\n            this.creating = true\n          }\n        } else {\n          this.toggle()\n        }\n      },\n      cancel () {\n        this.creating = false\n        this.editing = false\n        this.newNode = {\n          text: 'Google',\n          link: {\n            type: 'link',\n            key: '',\n            value: 'https://www.google.com'\n          }\n        }\n      },\n      edit () {\n        this.editing = false\n        this.$emit('nodes', this.nodes)\n      },\n      save () {\n        if (this.newNode.link.type === 'link')\n          delete this.newNode.link.key\n        this.nodes.push(this.newNode)\n        this.creating = false\n        this.newNode = {\n          text: 'Google',\n          type: 'link',\n          value: 'https://www.google.com'\n        }\n        this.$emit('nodes', this.nodes)\n      },\n      toggle () {\n        this.open = !this.open\n      },\n      checkLast (i) {\n        return (i + 1) === this.nodes.length\n      }\n    },\n    components: {\n      draggable\n    }\n  }\n</script>\n"]}]}