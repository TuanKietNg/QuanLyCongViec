{"remainingRequest":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\babel-loader\\lib\\index.js!D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\src\\helpers\\fake-backend.js","dependencies":[{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\src\\helpers\\fake-backend.js","mtime":1704440180000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\babel.config.js","mtime":1704440180000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704332086000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\babel-loader\\lib\\index.js","mtime":1704440412000},{"path":"D:\\TTTN2023\\Code\\QuanLyCongViec\\FE\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1704332098000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJEOi9UVFROMjAyMy9Db2RlL1F1YW5MeUNvbmdWaWVjL0ZFL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwovLyBhcnJheSBpbiBsb2NhbCBzdG9yYWdlIGZvciByZWdpc3RlcmVkIHVzZXJzCnZhciB1c2VycyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJzJykpIHx8IFt7CiAgdXNlcm5hbWU6ICJhZG1pbiIsCiAgZW1haWw6ICJhZG1pbkB0aGVtZXNicmFuZC5jb20iLAogIHBhc3N3b3JkOiAiMTIzNDU2Igp9XTsKZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VyZUZha2VCYWNrZW5kKCkgewogIHZhciByZWFsRmV0Y2ggPSB3aW5kb3cuZmV0Y2g7CiAgd2luZG93LmZldGNoID0gZnVuY3Rpb24gKHVybCwgb3B0cykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgLy8gd3JhcCBpbiB0aW1lb3V0IHRvIHNpbXVsYXRlIHNlcnZlciBhcGkgY2FsbAogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyBhdXRoZW50aWNhdGUKICAgICAgICBpZiAodXJsLmVuZHNXaXRoKCcvdXNlcnMvYXV0aGVudGljYXRlJykgJiYgb3B0cy5tZXRob2QgPT09ICdQT1NUJykgewogICAgICAgICAgLy8gZ2V0IHBhcmFtZXRlcnMgZnJvbSBwb3N0IHJlcXVlc3QKICAgICAgICAgIHZhciBwYXJhbXMgPSBKU09OLnBhcnNlKG9wdHMuYm9keSk7CgogICAgICAgICAgLy8gZmluZCBpZiBhbnkgdXNlciBtYXRjaGVzIGxvZ2luIGNyZWRlbnRpYWxzCiAgICAgICAgICB2YXIgZmlsdGVyZWRVc2VycyA9IHVzZXJzLmZpbHRlcihmdW5jdGlvbiAodXNlcikgewogICAgICAgICAgICByZXR1cm4gdXNlci5lbWFpbCA9PT0gcGFyYW1zLmVtYWlsICYmIHVzZXIucGFzc3dvcmQgPT09IHBhcmFtcy5wYXNzd29yZDsKICAgICAgICAgIH0pOwogICAgICAgICAgaWYgKGZpbHRlcmVkVXNlcnMubGVuZ3RoKSB7CiAgICAgICAgICAgIC8vIGlmIGxvZ2luIGRldGFpbHMgYXJlIHZhbGlkIHJldHVybiB1c2VyIGRldGFpbHMgYW5kIGZha2Ugand0IHRva2VuCiAgICAgICAgICAgIHZhciB1c2VyID0gZmlsdGVyZWRVc2Vyc1swXTsKICAgICAgICAgICAgdmFyIHJlc3BvbnNlSnNvbiA9IHsKICAgICAgICAgICAgICBpZDogdXNlci5pZCwKICAgICAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSwKICAgICAgICAgICAgICBuYW1lOiB1c2VyLm5hbWUsCiAgICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsCiAgICAgICAgICAgICAgdG9rZW46ICdmYWtlLWp3dC10b2tlbicKICAgICAgICAgICAgfTsKICAgICAgICAgICAgcmVzb2x2ZSh7CiAgICAgICAgICAgICAgb2s6IHRydWUsCiAgICAgICAgICAgICAgdGV4dDogZnVuY3Rpb24gdGV4dCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoSlNPTi5zdHJpbmdpZnkocmVzcG9uc2VKc29uKSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIGVsc2UgcmV0dXJuIGVycm9yCiAgICAgICAgICAgIHJlamVjdCgnVGhlc2UgY3JlZGVudGlhbHMgZG8gbm90IG1hdGNoIG91ciByZWNvcmRzLicpOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgLy8gZ2V0IHVzZXJzCiAgICAgICAgaWYgKHVybC5lbmRzV2l0aCgnL3VzZXJzJykgJiYgb3B0cy5tZXRob2QgPT09ICdHRVQnKSB7CiAgICAgICAgICAvLyBjaGVjayBmb3IgZmFrZSBhdXRoIHRva2VuIGluIGhlYWRlciBhbmQgcmV0dXJuIHVzZXJzIGlmIHZhbGlkLCB0aGlzIHNlY3VyaXR5IGlzIGltcGxlbWVudGVkIHNlcnZlciBzaWRlIGluIGEgcmVhbCBhcHBsaWNhdGlvbgogICAgICAgICAgaWYgKG9wdHMuaGVhZGVycyAmJiBvcHRzLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9PT0gJ0JlYXJlciBmYWtlLWp3dC10b2tlbicpIHsKICAgICAgICAgICAgcmVzb2x2ZSh7CiAgICAgICAgICAgICAgb2s6IHRydWUsCiAgICAgICAgICAgICAgdGV4dDogZnVuY3Rpb24gdGV4dCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoSlNPTi5zdHJpbmdpZnkodXNlcnMpKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gcmV0dXJuIDQwMSBub3QgYXV0aG9yaXNlZCBpZiB0b2tlbiBpcyBudWxsIG9yIGludmFsaWQKICAgICAgICAgICAgcmVqZWN0KCdVbmF1dGhvcmlzZWQnKTsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIC8vIGdldCB1c2VyIGJ5IGlkCiAgICAgICAgaWYgKHVybC5tYXRjaCgvXC91c2Vyc1wvXGQrJC8pICYmIG9wdHMubWV0aG9kID09PSAnR0VUJykgewogICAgICAgICAgLy8gY2hlY2sgZm9yIGZha2UgYXV0aCB0b2tlbiBpbiBoZWFkZXIgYW5kIHJldHVybiB1c2VyIGlmIHZhbGlkLCB0aGlzIHNlY3VyaXR5IGlzIGltcGxlbWVudGVkIHNlcnZlciBzaWRlIGluIGEgcmVhbCBhcHBsaWNhdGlvbgogICAgICAgICAgaWYgKG9wdHMuaGVhZGVycyAmJiBvcHRzLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9PT0gJ0JlYXJlciBmYWtlLWp3dC10b2tlbicpIHsKICAgICAgICAgICAgLy8gZmluZCB1c2VyIGJ5IGlkIGluIHVzZXJzIGFycmF5CiAgICAgICAgICAgIHZhciB1cmxQYXJ0cyA9IHVybC5zcGxpdCgnLycpOwogICAgICAgICAgICB2YXIgaWQgPSBwYXJzZUludCh1cmxQYXJ0c1t1cmxQYXJ0cy5sZW5ndGggLSAxXSk7CiAgICAgICAgICAgIHZhciBtYXRjaGVkVXNlcnMgPSB1c2Vycy5maWx0ZXIoZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgICAgICAgICByZXR1cm4gdXNlci5pZCA9PT0gaWQ7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB2YXIgX3VzZXIgPSBtYXRjaGVkVXNlcnMubGVuZ3RoID8gbWF0Y2hlZFVzZXJzWzBdIDogbnVsbDsKCiAgICAgICAgICAgIC8vIHJlc3BvbmQgMjAwIE9LIHdpdGggdXNlcgogICAgICAgICAgICByZXNvbHZlKHsKICAgICAgICAgICAgICBvazogdHJ1ZSwKICAgICAgICAgICAgICB0ZXh0OiBmdW5jdGlvbiB0ZXh0KCkgewogICAgICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KF91c2VyKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gcmV0dXJuIDQwMSBub3QgYXV0aG9yaXNlZCBpZiB0b2tlbiBpcyBudWxsIG9yIGludmFsaWQKICAgICAgICAgICAgcmVqZWN0KCdVbmF1dGhvcmlzZWQnKTsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIC8vIHJlZ2lzdGVyIHVzZXIKICAgICAgICBpZiAodXJsLmVuZHNXaXRoKCcvdXNlcnMvcmVnaXN0ZXInKSAmJiBvcHRzLm1ldGhvZCA9PT0gJ1BPU1QnKSB7CiAgICAgICAgICAvLyBnZXQgbmV3IHVzZXIgb2JqZWN0IGZyb20gcG9zdCBib2R5CiAgICAgICAgICB2YXIgbmV3VXNlciA9IEpTT04ucGFyc2Uob3B0cy5ib2R5KTsKICAgICAgICAgIC8vIHZhbGlkYXRpb24KICAgICAgICAgIHZhciBkdXBsaWNhdGVVc2VyID0gdXNlcnMuZmlsdGVyKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgICAgIHJldHVybiB1c2VyLnVzZXJuYW1lID09PSBuZXdVc2VyLnVzZXJuYW1lOwogICAgICAgICAgfSkubGVuZ3RoOwogICAgICAgICAgaWYgKGR1cGxpY2F0ZVVzZXIpIHsKICAgICAgICAgICAgcmVqZWN0KCJVc2VybmFtZSAnIiArIG5ld1VzZXIudXNlcm5hbWUgKyAiJyBpcyBhbHJlYWR5IHRha2VuIik7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KCiAgICAgICAgICAvLyBzYXZlIG5ldyB1c2VyCiAgICAgICAgICBuZXdVc2VyLmlkID0gdXNlcnMubGVuZ3RoID8gTWF0aC5tYXguYXBwbHkoTWF0aCwgX3RvQ29uc3VtYWJsZUFycmF5KHVzZXJzLm1hcChmdW5jdGlvbiAodXNlcikgewogICAgICAgICAgICByZXR1cm4gdXNlci5pZDsKICAgICAgICAgIH0pKSkgKyAxIDogMTsKICAgICAgICAgIHVzZXJzLnB1c2gobmV3VXNlcik7CiAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcnMnLCBKU09OLnN0cmluZ2lmeSh1c2VycykpOwoKICAgICAgICAgIC8vIHJlc3BvbmQgMjAwIE9LCiAgICAgICAgICByZXNvbHZlKHsKICAgICAgICAgICAgb2s6IHRydWUsCiAgICAgICAgICAgIHRleHQ6IGZ1bmN0aW9uIHRleHQoKSB7CiAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIC8vIHBhc3MgdGhyb3VnaCBhbnkgcmVxdWVzdHMgbm90IGhhbmRsZWQgYWJvdmUKICAgICAgICByZWFsRmV0Y2godXJsLCBvcHRzKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzcG9uc2UpOwogICAgICAgIH0pOwogICAgICB9LCA1MDApOwogICAgfSk7CiAgfTsKfQ=="},{"version":3,"names":["users","JSON","parse","localStorage","getItem","username","email","password","configureFakeBackend","realFetch","window","fetch","url","opts","Promise","resolve","reject","setTimeout","endsWith","method","params","body","filteredUsers","filter","user","length","responseJson","id","name","token","ok","text","stringify","headers","Authorization","match","urlParts","split","parseInt","matchedUsers","newUser","duplicateUser","Math","max","apply","_toConsumableArray","map","push","setItem","then","response"],"sources":["D:/TTTN2023/Code/QuanLyCongViec/FE/src/helpers/fake-backend.js"],"sourcesContent":["// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem('users'))\r\n    || [{ username: \"admin\", email: \"admin@themesbrand.com\", password: \"123456\" }];\r\n\r\nexport function configureFakeBackend() {\r\n\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            // wrap in timeout to simulate server api call\r\n            setTimeout(() => {\r\n\r\n                // authenticate\r\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.email === params.email && user.password === params.password;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        // if login details are valid return user details and fake jwt token\r\n                        let user = filteredUsers[0];\r\n                        let responseJson = {\r\n                            id: user.id,\r\n                            username: user.username,\r\n                            name: user.name,\r\n                            email: user.email,\r\n                            token: 'fake-jwt-token'\r\n                        };\r\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(responseJson)) });\r\n                    } else {\r\n                        // else return error\r\n                        reject('These credentials do not match our records.');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // get users\r\n                if (url.endsWith('/users') && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\r\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(users)) });\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // get user by id\r\n                if (url.match(/\\/users\\/\\d+$/) && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\r\n                        // find user by id in users array\r\n                        let urlParts = url.split('/');\r\n                        let id = parseInt(urlParts[urlParts.length - 1]);\r\n                        let matchedUsers = users.filter(user => { return user.id === id; });\r\n                        let user = matchedUsers.length ? matchedUsers[0] : null;\r\n\r\n                        // respond 200 OK with user\r\n                        resolve({ ok: true, text: () => JSON.stringify(user) });\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // register user\r\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\r\n                    // get new user object from post body\r\n                    let newUser = JSON.parse(opts.body);\r\n                    // validation\r\n                    let duplicateUser = users.filter(user => { return user.username === newUser.username; }).length;\r\n                    if (duplicateUser) {\r\n                        reject(\"Username '\" + newUser.username + \"' is already taken\");\r\n                        return;\r\n                    }\r\n\r\n                    // save new user\r\n                    newUser.id = users.length ? Math.max(...users.map(user => user.id)) + 1 : 1;\r\n                    users.push(newUser);\r\n                    localStorage.setItem('users', JSON.stringify(users));\r\n\r\n                    // respond 200 OK\r\n                    resolve({ ok: true, text: () => Promise.resolve() });\r\n\r\n                    return;\r\n                }\r\n\r\n                // pass through any requests not handled above\r\n                realFetch(url, opts).then(response => resolve(response));\r\n\r\n            }, 500);\r\n        });\r\n    }\r\n}"],"mappings":"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"}]}