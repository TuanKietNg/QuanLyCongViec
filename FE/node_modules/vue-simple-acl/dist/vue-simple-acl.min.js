var VueSimpleAcl=function(e,r){"use strict";const t=e=>{let r=null;let t=e.toString().match(/\(([a-z0-9 ,$_\+\*\-\/]+)\)/im);if(t&&Array.isArray(t)&&t[0]){let e=t[0];e=e.replace(/\(|\)|[ ]/g,"");let i=e.split(",");i.length>0&&(r=i)}return r},i=e=>"string"!=typeof e?"":e.charAt(0).toUpperCase()+e.slice(1),o=r.reactive({registeredUser:{},registeredRules:{},options:{}}),s=e=>{g(e.user)?o.registeredUser=e.user():o.registeredUser=e.user,e.rules&&"function"==typeof e.rules&&e.rules(),o.options=e},a=(e,r)=>{o.registeredRules.hasOwnProperty(e)?console.warn(`:::VueSimpleACL::: Duplicate ACL Rule '${e}' defined. Only the first defined rule will be evaluated.`):o.registeredRules[e]=r},n=(e,r)=>{"string"==typeof e?a(e,r):"object"==typeof e&&Array.isArray(e)&&Object.values(e).forEach((e=>{a(e,r)}))},l=(e,r,i)=>{try{return"function"==typeof e&&("object"!=typeof i||Array.isArray(i)?"object"==typeof i&&Array.isArray(i)?e(o.registeredUser,...i):e(o.registeredUser):e(o.registeredUser,i))}catch(i){let o=t(e),s=null;o&&Array.isArray(o)&&(o.shift(),s=o.join(", "));let a=':::VueSimpleACL::: The defined ACL Rule for "'+r+'" require some argument(s) or data object to be specified for matching.';return a+="\n\nCheck the file containing your defineAclRules((setRule) => {...}); declarations",a+="\n\nExamples:",o&&o.length<=0?(a+=`\nv-can:${r}`,a+=`\nv-can="'${r}'"`,a+=`\n$can('${r}')`):o&&1===o.length?(a+=`\nv-can:${r}="${s}"`,a+=`\nv-can="'${r}', ${s}"`,a+=`\n$can('${r}', ${s})`):(a+=`\nv-can:${r}="[${s}]"`,a+=`\nv-can="'${r}', [${s}]"`,a+=`\n$can('${r}', [${s}])`),console.error(a),console.error(i),!1}},c=({abilities:e,args:r,any:t=!1})=>{if(e&&"string"==typeof e){if(o.registeredRules.hasOwnProperty(e)){let t=o.registeredRules[e];return l(t,e,r)}}else if("object"==typeof e&&Array.isArray(e)){let r=!1,i=!1,s=0,a=0;return e.forEach((e=>{if(o.registeredRules.hasOwnProperty(e.abilities)){let n=o.registeredRules[e.abilities];i=l(n,e.abilities,e.args),a&&a++,!0===t&&i&&(r=!0),s++}})),s>0&&s===a&&(r=!0),r}return!1},m=({abilities:e,args:r,any:t=!1})=>{const i=r,o=t;let s=!1;if(e)s=c(i?{abilities:e,args:i}:{abilities:e});else if(i&&"string"==typeof i)s=c({abilities:i});else if(i&&null!==i&&"object"==typeof i){if(2!==(Array.isArray(i)?i.length:Object.keys(i).length)||"string"!=typeof i[0]||"object"!=typeof i[1]||Array.isArray(i[1])){let e=[],r=[];i.forEach((r=>{if(r&&"string"==typeof r)e.push({abilities:r});else if(r&&"object"==typeof r){let t=null,i=[];r.forEach((e=>{e&&!t&&"string"==typeof e?t=e:i.push(e)})),t&&e.push({abilities:t,args:i})}})),s=c({abilities:e,args:r,any:o})}else s=c({abilities:i[0],args:i[1]})}return s},p=({abilities:e,args:r,any:t=!1})=>e&&"string"==typeof e?m({abilities:e,args:r,any:t}):"object"==typeof e?m({abilities:null,args:e,any:t}):(console.warn(":::VueSimpleACL::: Invalid ACL arguments specified."),!1),y=(e,r)=>p({abilities:e,args:r,any:!1}),u=(e,r)=>!p({abilities:e,args:r,any:!1}),f=(e,r)=>p({abilities:e,args:r,any:!0}),g=e=>"function"==typeof e&&e()instanceof Promise,d=(e,a)=>{const n=!!e.config.globalProperties,l={...{user:Object.create(null),rules:null,router:null,onDeniedRoute:"/",directiveName:"can",helperName:"$can",enableSematicAlias:!0},...a};l.directiveName&&"string"==typeof l.directiveName&&l.directiveName.startsWith("v-")&&(l.directiveName=l.directiveName.substr(2,l.directiveName.length)),l.helperName&&"string"==typeof l.helperName&&"$"!==l.helperName.charAt(0)&&(l.helperName="$"+l.helperName),g(l.user)||s(l);const c=(e,r,t)=>{const i=r.arg,o=r.value,s=r.modifiers,a=!!s.any,n=!!s.not,l=!!s.readonly,c=!(!s.disable&&!s.disabled);!s.hide&&s.hidden;m({abilities:i,args:o,any:a})?n&&(e.style.display="none"):n||(c?e.disabled=!0:l?e.readOnly=!0:e.style.display="none")},p=(e,r,t)=>{e.directive(`${r}`,{mounted(e,r,t){c(e,r)},updated(e,r,t){c(e,r)}})},d=(e,r,t,o)=>{t?o?(e.config.globalProperties.$acl||(e.config.globalProperties.$acl={}),e.config.globalProperties.$acl[r]=(e,r)=>y(e,r),e.config.globalProperties.$acl[`all${i(r)}`]=(e,r)=>y(e,r),e.config.globalProperties.$acl[`not${i(r)}`]=(e,r)=>u(e,r),e.config.globalProperties.$acl[`any${i(r)}`]=(e,r)=>f(e,r)):(e.config.globalProperties[r]=(e,r)=>y(e,r),e.config.globalProperties[r].all=(e,r)=>y(e,r),e.config.globalProperties[r].not=(e,r)=>u(e,r),e.config.globalProperties[r].any=(e,r)=>f(e,r)):o?(e.prototype.$acl||(e.prototype.$acl={}),e.prototype.$acl[r]=(e,r)=>y(e,r),e.prototype.$acl[`all${i(r)}`]=(e,r)=>y(e,r),e.prototype.$acl[`not${i(r)}`]=(e,r)=>u(e,r),e.prototype.$acl[`any${i(r)}`]=(e,r)=>f(e,r)):(e.prototype[r]=(e,r)=>y(e,r),e.prototype[r].all=(e,r)=>y(e,r),e.prototype[r].not=(e,r)=>u(e,r),e.prototype[r].any=(e,r)=>f(e,r))};if(p(e,`${l.directiveName}`),l.enableSematicAlias&&(p(e,"permission"),p(e,"permissions"),p(e,"role"),p(e,"roles"),p(e,"role-or-permission"),p(e,"role-or-permissions")),d(e,`${l.helperName}`,n,!1),l.enableSematicAlias&&(d(e,"can",n,!0),d(e,"permission",n,!0),d(e,"permissions",n,!0),d(e,"role",n,!0),d(e,"roles",n,!0),d(e,"roleOrPermission",n,!0),d(e,"roleOrPermissions",n,!0),n?(e.config.globalProperties.$acl||(e.config.globalProperties.$acl={}),e.config.globalProperties.$acl.user=r.computed((()=>o.registeredUser)).value,e.config.globalProperties.$acl.getUser=()=>o.registeredUser):(e.prototype.$acl||(e.prototype.$acl={}),e.prototype.$acl.user=r.computed((()=>o.registeredUser)).value,e.prototype.$acl.getUser=()=>o.registeredUser)),l.router){const e=(e,r,t,i)=>{if(i)t();else{let i=l.onDeniedRoute;e.meta&&e.meta.onDeniedRoute&&(i=e.meta.onDeniedRoute),t("object"==typeof i?i:"$from"===i?r:{path:`${i}`,replace:!0})}},r=(r,i,s)=>{if(r.meta&&(r.meta.can||r.meta.permission||r.meta.role||r.meta.roleOrPermission)){const a=r.meta.can||r.meta.permission||r.meta.role||r.meta.roleOrPermission;let n=!1;if("function"==typeof a){const e=t(a);n=Array.isArray(e)&&4===e.length?a(r,i,y,o.registeredUser):a(r,i,y)}else n=y(a);e(r,i,s,n)}else if(r.meta&&(r.meta.canAll||r.meta.allCan||r.meta.allPermission||r.meta.allRole||r.meta.allRoleOrPermission)){const a=r.meta.canAll||r.meta.allCan||r.meta.allPermission||r.meta.allRole||r.meta.allRoleOrPermission;let n=!1;if("function"==typeof a){const e=t(a);n=Array.isArray(e)&&4===e.length?a(r,i,y,o.registeredUser):a(r,i,y)}else n=y(a);e(r,i,s,n)}else if(r.meta&&(r.meta.cannot||r.meta.canNot||r.meta.notCan||r.meta.notPermission||r.meta.notRole||r.meta.notRoleOrPermission)){const a=r.meta.cannot||r.meta.canNot||r.meta.notCan||r.meta.notPermission||r.meta.notRole||r.meta.notRoleOrPermission;let n=!1;if("function"==typeof a){const e=t(a);n=Array.isArray(e)&&4===e.length?a(r,i,u,o.registeredUser):a(r,i,u)}else n=u(a);e(r,i,s,n)}else if(r.meta&&(r.meta.canAny||r.meta.anyCan||r.meta.anyPermission||r.meta.anyRole||r.meta.anyRoleOrPermission)){const a=r.meta.canAny||r.meta.anyCan||r.meta.anyPermission||r.meta.anyRole||r.meta.anyRoleOrPermission;let n=!1;if("function"==typeof a){const e=t(a);n=Array.isArray(e)&&4===e.length?a(r,i,f,o.registeredUser):a(r,i,f)}else n=f(a);e(r,i,s,n)}else s()};l.router.beforeEach(((e,t,i)=>{g(l.user)?l.user().then((o=>{l.user=o,s(l),r(e,t,i)})).catch((e=>{console.warn(":::VueSimpleACL::: Error while processing/retrieving 'user' data with the Asynchronous function.")})):r(e,t,i)}))}else g(l.user)&&console.error(":::VueSimpleACL::: Instance of vue-router is required to define 'user' retrieved from a promise or Asynchronous function.")},b={install:(e,r)=>d(e,r)};return"undefined"!=typeof window&&window.Vue&&window.Vue.use(b),e.createAcl=e=>({install:(r,t={})=>{d(r,{...t,...e})}}),e.defineAclRules=e=>{"function"==typeof e&&e(n)},e.useAcl=()=>{let e={};return e.user=r.computed((()=>o.registeredUser)).value,e.getUser=()=>o.registeredUser,e.can=y,e.can.not=u,e.can.any=f,e.notCan=u,e.canNot=u,e.cannot=u,e.anyCan=f,e.permission=y,e.allPermission=y,e.notPermission=u,e.anyPermission=f,e.permission.not=u,e.permission.any=f,e.role=y,e.allRole=y,e.notRole=u,e.anyRole=f,e.role.not=u,e.role.any=f,e.roleOrPermission=y,e.allRoleOrPermission=y,e.notRoleOrPermission=u,e.anyRoleOrPermission=f,e.roleOrPermission.not=u,e.roleOrPermission.any=f,r.reactive(e)},Object.defineProperty(e,"__esModule",{value:!0}),e}({},Vue);
